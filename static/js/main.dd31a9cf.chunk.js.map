{"version":3,"sources":["StartPage.js","Running.js","Finish.js","App.js","serviceWorker.js","index.js"],"names":["StartPage","id","className","to","Component","Running","props","state","ques","score","isLoaded","items","answ","this","setState","data","value","prevState","ListGroup","ListGroupItem","ListGroupItemHeading","map","ans","index","onClick","checkAnswer","correct","key","ListGroupItemText","ondex","no","question","style","fontSize","len","length","Card","body","color","CardTitle","CardText","renderQuestions","renderFinish","Finish","outline","App","disp","handleState","bind","change","rest","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd31a9cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass StartPage extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div id=\"index-banner\" className=\"parallax-container\">\r\n\t\t\t\t\t<div className=\"section no-pad-bot\">\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<h1 className=\"header center\">Mi Reto</h1>\r\n\t\t\t\t\t\t\t<div className=\"row text-center\">\r\n\t\t\t\t\t\t\t\t<h5 className=\"header col\">Responda estas 10 preguntas b치sicas de reacci칩n con 10 puntos cada una.</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col text-center\">\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Link to={'/running'} className=\"btn btn-secondary\">Empezar</Link>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default StartPage;","import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Card, CardTitle, CardText } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport data from './quiz.json';\r\nclass Running extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { ques: 1, score: 0, isLoaded: false, items: [], answ:[] };\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t/*  fetch(\"https://api.jsonbin.io/b/5ea216e51299b93742350c73\")\r\n\t\t   .then(res => res.json())\r\n\t\t   .then(\r\n\t\t\t (result) => {\r\n\t\t\t   this.setState({\r\n\t\t\t\t isLoaded: true,\r\n\t\t\t\t items: result\r\n\t\t\t   });\r\n\t\t\t },\r\n\t\t\t // Note: it's important to handle errors here\r\n\t\t\t // instead of a catch() block so that we don't swallow\r\n\t\t\t // exceptions from actual bugs in components.\r\n\t\t\t (error) => {\r\n\t\t\t   this.setState({\r\n\t\t\t\t isLoaded: false,\r\n\t\t\t   });\r\n\t\t\t }\r\n\t\t   ) */\r\n\t\tthis.setState({\r\n\t\t\tisLoaded: true,\r\n\t\t\titems: data\r\n\t\t});\r\n\t}\r\n\tcheckAnswer(value) {\r\n\t\tif (value === \"true\") {\r\n\t\t\tthis.setState((prevState) => {\r\n\t\t\t\treturn { ques: prevState.ques + 1, score: prevState.score + 1 };\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setState((prevState) => {\r\n\t\t\t\treturn { ques: prevState.ques + 1 };\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\trenderQuestions() {\r\n\t\treturn (\r\n\t\t\t<div className=\"m-4\">\t\t\t\t\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t\t<ListGroupItemHeading className=\"text-success\">{this.state.items[this.state.ques - 1][\"question\"]}</ListGroupItemHeading>\r\n\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.items[this.state.ques - 1][\"answers\"].map((ans, index) => (\r\n\t\t\t\t\t\t\t<ListGroupItem onClick={() => this.checkAnswer(ans.correct)} key={index}>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t\t\t\t{ans.value}\r\n\t\t\t\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t\t\t\t</ListGroupItem>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t\t<br />\t\t\t\t\t\r\n\t\t\t\t<Link to={'/'} className=\"btn btn-primary\">Ir a la p치gina principal</Link>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\trenderFinish() {\r\n\t\treturn (\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<div className=\"text-left pl-4\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.items.map((ques, ondex) => {\r\n\t\t\t\t\t\treturn \t<div key={ondex}>\r\n\t\t\t\t\t\t\t\t<p className=\"text-primary m-0\">{ques.no}.-  {ques.question}</p>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{this.state.items[ondex][\"answers\"].map((ans, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (ans.correct===\"true\") ?\t<p className=\"text-secondary m-1\"  style={{ fontSize: '1.0rem' }} key={index}>R.-    {ans.value}</p>:''\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t\t}\t\r\n\t\t\t\t</div>\t\t\t\r\n\t\t\t\t<Link to={'/'} className=\"btn btn-warning mt-3\">Iniciar prueba nuevamente</Link>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\trender() {\r\n\t\tconst len = this.state.items.length;\r\n\t\tif (this.state.isLoaded) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"p-3 m-4\">\r\n\t\t\t\t\t<h3 className=\"header center teal-text text-lighten-2\">Mi Reto</h3>\r\n\t\t\t\t\t<div className=\"row text-white\">\r\n\t\t\t\t\t\t<div className=\"col-md-6 \">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Card body color=\"primary\">\r\n\t\t\t\t\t\t\t\t<CardTitle>Numero de Pregunta</CardTitle>\r\n\t\t\t\t\t\t\t\t<CardText>{this.state.ques}</CardText>\r\n\t\t\t\t\t\t\t</Card>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"col-md-6\">\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Card body color=\"secondary\">\r\n\t\t\t\t\t\t\t\t<CardTitle>Puntuaci칩n</CardTitle>\r\n\t\t\t\t\t\t\t\t<CardText>{ this.state.ques <= len ?'-':\tthis.state.score }</CardText>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.ques <= len ? this.renderQuestions() : this.renderFinish()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn <div></div>\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nexport default Running;","import React from 'react';\r\nimport { Card, CardTitle, CardText } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Finish = (props) => {\r\n\treturn (\r\n\t\t<div>\t\t\t\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col\" >\t\t\t\t\t\r\n\t\t\t\t\t<Card body outline color=\"secondary\">\r\n\t\t\t\t\t\t<CardTitle>Score</CardTitle>\r\n\t\t\t\t\t\t<CardText>{props.score}</CardText>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<Link to={'/'} className=\"btn btn-secondary\">Get Started</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Finish","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StartPage from './StartPage.js';\nimport Running from './Running.js';\nimport Finish from './Finish.js';\n\n\nclass App extends Component {\n  \n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {disp:'start',score:0};\n\t\tthis.handleState= this.handleState.bind(this);\n\t}\n\thandleState(change,rest=0){\n\t\tthis.setState({disp:change,score:rest});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\t\t\t\n\t\t\t<BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact={true} path={'/'} component={StartPage} />\n\t\t\t\t\t<Route exact={true} path={'/running'} component={Running} />\n\t\t\t\t\t<Route exact={true} path={'/finish'} component={Finish} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t\t\n\t\t  </div>\n\t\t);\n  \t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}